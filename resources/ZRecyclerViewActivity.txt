public class ${name}Activity extends BaseActivity {
    private ZRecyclerView    recyclerView;
    private ${name}Adapter recyclerViewAdapter;
    private int      mPage      = 1;
    private String[] requestTag = new String[1];

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_${layout});

        initView();
    }
    
   @Override
    protected void onDestroy() {
        super.onDestroy();
        ZHttp.cancelRequest(requestTag);
    }

    private void initView() {
        recyclerView = getView(R.id.recycler_view);
        //recyclerView.setEmptyView(mActivity, R.layout.view_pullrecycler_empty);
        recyclerView.setOnItemClickListener(new BaseRecyclerAdapter.OnItemClickListener<${type}>() {
            @Override
            public void onItemClick(View covertView, int position, ${type} data) {
                //TODO 添加点击事件 
            }
        });
        recyclerView.setOnPullLoadMoreListener(new ZRecyclerView.PullLoadMoreListener() {
            @Override
            public void onRefresh() {
                mPage = 1;
                requestData();
            }

            @Override
            public void onLoadMore() {
                mPage = mPage + 1;
                requestData();
            }
        });
        recyclerView.refreshWithPull();
    }

    private void requestData() {
        HashMap<String, String> mapApply = new HashMap<>();
        mapApply.put("page", String.valueOf(mPage));
        requestTag[0] = ZHttp.post("", mapApply, new ZResponse<${name}Reply>(${name}Reply.class) {
            @Override
            public void onSuccess(Response response, ${name}Reply resObj) {
                setDataToRecyclerView(resObj.listData, mPage == 1);
                if (isNoMore(resObj)) {
                    recyclerView.setNoMore(true, 10, recyclerViewAdapter.getDatas());
                } else {
                    mPage++;
                }
            }

            @Override
            public void onError(int code, String error) {
                super.onError(code, error);
                setDataToRecyclerView(null, mPage == 1);
            }

            @Override
            public void onFinished() {
                super.onFinished();
                recyclerView.setPullLoadMoreCompleted();
            }
        });
    }

    /**
     * 分页是否有下一页
     */
    private boolean isNoMore(${name}Reply resobj) {
        //TODO 判断是否有下一页
        return false;
    }

    public void setDataToRecyclerView(List<${type}> list, boolean isClear) {
        if (recyclerViewAdapter == null) {
            recyclerViewAdapter = new ${name}Adapter();
            recyclerView.setAdapter(recyclerViewAdapter);
        }

        if (isClear) {
            recyclerViewAdapter.setDatas(list);
        } else {
            recyclerViewAdapter.addDatas(list);
        }
    }
}


